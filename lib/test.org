#+begin_src lua :results verbatim
  local x = 100
  return x
#+end_src

#+RESULTS:
: 100

#+begin_src lua :results output
  sparse_table = {}
  sparse_table[1] = 1
  sparse_table[4] = 4
  sparse_table[9] = 9

  for key, value in pairs(sparse_table) do
    print(key, value)
  end
#+end_src

#+RESULTS:
: 1	1
: 4	4
: 9	9

#+begin_src lua :results output
  local sparse_table = {}
  sparse_table[2] = 2
  sparse_table[5] = 5
  sparse_table[9] = 9

  local count = 0
  local out_table = {}

  for key, value in pairs(sparse_table) do
    print(key, value)
  end

  print("==============================")

  for key, value in pairs(sparse_table) do
    count = count + 1
    out_table[count] = value
  end

  for key, value in ipairs(out_table) do
    print(key, value)
  end
#+end_src

#+RESULTS:
: 5	5
: 2	2
: 9	9
: ==============================
: 1	5
: 2	2
: 3	9

#+begin_src lua :results output
  function desparsify(in_table)
    local count = 0
    local out_table = {}
    for key, value in pairs(in_table) do
      count = count + 1
      out_table[count] = value
    end
    return out_table
  end

  local sparse_table = {}
  sparse_table[2] = 2
  sparse_table[5] = 5
  sparse_table[9] = 9

  local result = desparsify(sparse_table)

  for key, value in ipairs(result) do
    print(key, value)
  end

  print("==============================")

  local non_sparse_table = {}
  non_sparse_table[1] = 1
  non_sparse_table[2] = 2
  non_sparse_table[3] = 3

  for key, value in ipairs(desparsify(non_sparse_table)) do
    print(key, value)
  end
#+end_src

#+RESULTS:
: 1	5
: 2	2
: 3	9
: ==============================
: 1	1
: 2	2
: 3	3

#+begin_src fennel :results output
  (fn desparsify [in-table]
    "Remove gaps in a possibly sparse table."
    (var count 0)
    (local out-table {})
    (each [key value (pairs in-table)] (set count (+ count 1))
      (tset out-table count value))
    out-table)

  (local sparse-table {})
  (tset sparse-table 2 2)
  (tset sparse-table 5 5)
  (tset sparse-table 9 9)	 

  (each [key value (pairs (desparsify sparse-table))]
    (print key value))
#+end_src

#+RESULTS:
: 1	5
: 2	2
: 3	9

/Nice!/
